plugins {
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
	id 'com.palantir.docker-compose' version '0.25.0'
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.roman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
springBoot {
	buildInfo()
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'junit:junit:4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly    'org.flywaydb:flyway-core'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.3'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.0')
	testImplementation('org.junit.jupiter:junit-jupiter:5.7.0')

	testCompile('org.mockito:mockito-core:3.6.0')
	testCompile('org.mockito:mockito-junit-jupiter:3.6.0')
	testCompile('com.h2database:h2')

}

docker {
	name "ramzec2010/roman-public-repository"
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
	noCache true
}

dockerRun {
	name project.name
	image "ramzec2010/roman-public-repository"
	ports '8080:8080'
	clean true
}

dockerCompose {
	dockerComposeFile 'docker-compose-local.yml'
}

dockerComposeUp {
	dependsOn project.tasks.findByName('docker')
}


test {
	useJUnitPlatform()
}
