plugins {
	id 'com.palantir.docker' version '0.25.0'
	id 'com.palantir.docker-run' version '0.25.0'
	id 'com.palantir.docker-compose' version '0.25.0'
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.roman'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.3'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "com.commercetools.sdk.jvm.core:commercetools-models:1.59.0"
	implementation "com.commercetools.sdk.jvm.core:commercetools-java-client-ahc-2_5:1.59.0"
	implementation "com.commercetools.sdk.jvm.core:commercetools-java-client:1.59.0"
	implementation "com.commercetools.sdk.jvm.core:commercetools-convenience:1.59.0"
	implementation "com.commercetools:commercetools-sync-java:3.1.0"

}

docker {
	name "ramzec2010/roman-public-repository"
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: "build/libs/${bootJar.archiveFileName.get()}"])
	noCache true
}

dockerRun {
	name project.name
	image "ramzec2010/roman-public-repository"
	ports '8080:8080'
	clean true
}

dockerCompose {
	dockerComposeFile 'docker-compose-local.yml'
}

dockerComposeUp {
	dependsOn project.tasks.findByName('docker')
}


test {
	useJUnitPlatform()
}
